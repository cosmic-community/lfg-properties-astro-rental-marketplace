---
// src/components/HostCard.astro
import type { Host } from '@/types';

export interface Props {
  host: Host;
  className?: string;
}

const { host, className = "" } = Astro.props;

// Safe property access with defaults
const hostName = host.metadata?.host_name || host.title;
const bio = host.metadata?.bio || '';
const profilePhoto = host.metadata?.profile_photo;
const verified = host.metadata?.verified || false;
const responseRate = host.metadata?.response_rate || 0;
const memberSince = host.metadata?.member_since || '';

// Format member since date
const memberSinceFormatted = memberSince ? new Date(memberSince).getFullYear() : '';

// Format profile photo URL
const photoUrl = profilePhoto ? 
  `${profilePhoto.imgix_url}?w=200&h=200&fit=crop&auto=format,compress` : 
  null;
---

<article class={`card p-6 text-center ${className}`}>
  <div class="flex flex-col items-center">
    <div class="relative mb-4">
      {photoUrl ? (
        <img 
          src={photoUrl}
          alt={hostName}
          width="80"
          height="80"
          class="w-20 h-20 rounded-full object-cover"
          loading="lazy"
        />
      ) : (
        <div class="w-20 h-20 bg-gray-300 rounded-full flex items-center justify-center">
          <span class="text-gray-600 text-2xl">ðŸ‘¤</span>
        </div>
      )}
      
      {verified && (
        <div class="absolute -bottom-1 -right-1 bg-green-500 rounded-full p-1">
          <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
          </svg>
        </div>
      )}
    </div>
    
    <h3 class="text-lg font-semibold text-gray-900 mb-2">
      <a href={`/hosts/${host.slug}`} class="hover:text-primary-600 transition-colors">
        {hostName}
      </a>
    </h3>
    
    <div class="flex items-center justify-center space-x-4 mb-3">
      {verified && (
        <span class="badge badge-success">âœ“ Verified</span>
      )}
      {memberSinceFormatted && (
        <span class="text-sm text-gray-500">Since {memberSinceFormatted}</span>
      )}
    </div>
    
    {responseRate > 0 && (
      <div class="mb-3">
        <p class="text-sm text-gray-600">Response Rate</p>
        <p class="text-xl font-semibold text-primary-600">{responseRate}%</p>
      </div>
    )}
    
    {bio && (
      <p class="text-sm text-gray-600 line-clamp-3 mb-4">
        {bio}
      </p>
    )}
    
    <a href={`/hosts/${host.slug}`} class="btn-outline w-full">
      View Profile
    </a>
  </div>
</article>